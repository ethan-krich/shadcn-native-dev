name: Deploy Documentation

on:
  push:
    branches: [main, "**"]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "10.13.1"

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy to Vercel
        id: deploy
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "Deploying to production..."
            deployment_url=$(vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes)
          else
            echo "Deploying preview..."
            deployment_url=$(vercel --token=${{ secrets.VERCEL_TOKEN }} --yes)
          fi
          echo "deployment_url=$deployment_url" >> $GITHUB_OUTPUT
          echo "### ðŸš€ Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** $deployment_url" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "**Environment:** Production" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Environment:** Preview" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.deployment_url }}';
            const comment = `## ðŸš€ Documentation Deployment

            Your documentation has been successfully deployed!

            **ðŸ“± Preview URL:** ${deploymentUrl}
            **ðŸ”§ Environment:** Preview
            **ðŸ“¦ Commit:** \`${context.sha.substring(0, 7)}\`

            The preview will be updated automatically with each new commit to this PR.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
